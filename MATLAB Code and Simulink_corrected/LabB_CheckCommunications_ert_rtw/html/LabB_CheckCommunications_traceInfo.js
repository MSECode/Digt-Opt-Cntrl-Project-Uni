function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "LabB_CheckCommunications"};
	this.sidHashMap["LabB_CheckCommunications"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "LabB_CheckCommunications:312"};
	this.sidHashMap["LabB_CheckCommunications:312"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "LabB_CheckCommunications:398"};
	this.sidHashMap["LabB_CheckCommunications:398"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "LabB_CheckCommunications:399"};
	this.sidHashMap["LabB_CheckCommunications:399"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<S4>"] = {sid: "LabB_CheckCommunications:391"};
	this.sidHashMap["LabB_CheckCommunications:391"] = {rtwname: "<S4>"};
	this.rtwnameHashMap["<S5>"] = {sid: "LabB_CheckCommunications:408"};
	this.sidHashMap["LabB_CheckCommunications:408"] = {rtwname: "<S5>"};
	this.rtwnameHashMap["<S6>"] = {sid: "LabB_CheckCommunications:409"};
	this.sidHashMap["LabB_CheckCommunications:409"] = {rtwname: "<S6>"};
	this.rtwnameHashMap["<S7>"] = {sid: "LabB_CheckCommunications:408:185"};
	this.sidHashMap["LabB_CheckCommunications:408:185"] = {rtwname: "<S7>"};
	this.rtwnameHashMap["<S8>"] = {sid: "LabB_CheckCommunications:409:176"};
	this.sidHashMap["LabB_CheckCommunications:409:176"] = {rtwname: "<S8>"};
	this.rtwnameHashMap["<Root>/Balancing Robot"] = {sid: "LabB_CheckCommunications:312"};
	this.sidHashMap["LabB_CheckCommunications:312"] = {rtwname: "<Root>/Balancing Robot"};
	this.rtwnameHashMap["<Root>/Radians to Degrees"] = {sid: "LabB_CheckCommunications:398"};
	this.sidHashMap["LabB_CheckCommunications:398"] = {rtwname: "<Root>/Radians to Degrees"};
	this.rtwnameHashMap["<Root>/Radians to Degrees1"] = {sid: "LabB_CheckCommunications:399"};
	this.sidHashMap["LabB_CheckCommunications:399"] = {rtwname: "<Root>/Radians to Degrees1"};
	this.rtwnameHashMap["<Root>/Sine Wave"] = {sid: "LabB_CheckCommunications:401"};
	this.sidHashMap["LabB_CheckCommunications:401"] = {rtwname: "<Root>/Sine Wave"};
	this.rtwnameHashMap["<Root>/accelerometer"] = {sid: "LabB_CheckCommunications:390"};
	this.sidHashMap["LabB_CheckCommunications:390"] = {rtwname: "<Root>/accelerometer"};
	this.rtwnameHashMap["<Root>/encoder"] = {sid: "LabB_CheckCommunications:393"};
	this.sidHashMap["LabB_CheckCommunications:393"] = {rtwname: "<Root>/encoder"};
	this.rtwnameHashMap["<Root>/gyro"] = {sid: "LabB_CheckCommunications:350"};
	this.sidHashMap["LabB_CheckCommunications:350"] = {rtwname: "<Root>/gyro"};
	this.rtwnameHashMap["<Root>/motor"] = {sid: "LabB_CheckCommunications:402"};
	this.sidHashMap["LabB_CheckCommunications:402"] = {rtwname: "<Root>/motor"};
	this.rtwnameHashMap["<S1>/volt"] = {sid: "LabB_CheckCommunications:352"};
	this.sidHashMap["LabB_CheckCommunications:352"] = {rtwname: "<S1>/volt"};
	this.rtwnameHashMap["<S1>/Accelerometer"] = {sid: "LabB_CheckCommunications:407"};
	this.sidHashMap["LabB_CheckCommunications:407"] = {rtwname: "<S1>/Accelerometer"};
	this.rtwnameHashMap["<S1>/Data Type Conversion"] = {sid: "LabB_CheckCommunications:323"};
	this.sidHashMap["LabB_CheckCommunications:323"] = {rtwname: "<S1>/Data Type Conversion"};
	this.rtwnameHashMap["<S1>/Data Type Conversion1"] = {sid: "LabB_CheckCommunications:324"};
	this.sidHashMap["LabB_CheckCommunications:324"] = {rtwname: "<S1>/Data Type Conversion1"};
	this.rtwnameHashMap["<S1>/Data Type Conversion2"] = {sid: "LabB_CheckCommunications:325"};
	this.sidHashMap["LabB_CheckCommunications:325"] = {rtwname: "<S1>/Data Type Conversion2"};
	this.rtwnameHashMap["<S1>/Degrees to Radians"] = {sid: "LabB_CheckCommunications:391"};
	this.sidHashMap["LabB_CheckCommunications:391"] = {rtwname: "<S1>/Degrees to Radians"};
	this.rtwnameHashMap["<S1>/Gyroscope"] = {sid: "LabB_CheckCommunications:406"};
	this.sidHashMap["LabB_CheckCommunications:406"] = {rtwname: "<S1>/Gyroscope"};
	this.rtwnameHashMap["<S1>/M1V4 Left Motor Driver PWM6, D8 FST"] = {sid: "LabB_CheckCommunications:408"};
	this.sidHashMap["LabB_CheckCommunications:408"] = {rtwname: "<S1>/M1V4 Left Motor Driver PWM6, D8 FST"};
	this.rtwnameHashMap["<S1>/M1V4 Middle Motor Driver PWM2, D5 FST"] = {sid: "LabB_CheckCommunications:409"};
	this.sidHashMap["LabB_CheckCommunications:409"] = {rtwname: "<S1>/M1V4 Middle Motor Driver PWM2, D5 FST"};
	this.rtwnameHashMap["<S1>/M2V3 Left Connector 18, 19"] = {sid: "LabB_CheckCommunications:405"};
	this.sidHashMap["LabB_CheckCommunications:405"] = {rtwname: "<S1>/M2V3 Left Connector 18, 19"};
	this.rtwnameHashMap["<S1>/Sum"] = {sid: "LabB_CheckCommunications:330"};
	this.sidHashMap["LabB_CheckCommunications:330"] = {rtwname: "<S1>/Sum"};
	this.rtwnameHashMap["<S1>/Sum1"] = {sid: "LabB_CheckCommunications:331"};
	this.sidHashMap["LabB_CheckCommunications:331"] = {rtwname: "<S1>/Sum1"};
	this.rtwnameHashMap["<S1>/Sum2"] = {sid: "LabB_CheckCommunications:395"};
	this.sidHashMap["LabB_CheckCommunications:395"] = {rtwname: "<S1>/Sum2"};
	this.rtwnameHashMap["<S1>/Sum3"] = {sid: "LabB_CheckCommunications:396"};
	this.sidHashMap["LabB_CheckCommunications:396"] = {rtwname: "<S1>/Sum3"};
	this.rtwnameHashMap["<S1>/Sum4"] = {sid: "LabB_CheckCommunications:400"};
	this.sidHashMap["LabB_CheckCommunications:400"] = {rtwname: "<S1>/Sum4"};
	this.rtwnameHashMap["<S1>/accelerometer angle bias"] = {sid: "LabB_CheckCommunications:397"};
	this.sidHashMap["LabB_CheckCommunications:397"] = {rtwname: "<S1>/accelerometer angle bias"};
	this.rtwnameHashMap["<S1>/angle offset"] = {sid: "LabB_CheckCommunications:332"};
	this.sidHashMap["LabB_CheckCommunications:332"] = {rtwname: "<S1>/angle offset"};
	this.rtwnameHashMap["<S1>/angular velocity to angle"] = {sid: "LabB_CheckCommunications:333"};
	this.sidHashMap["LabB_CheckCommunications:333"] = {rtwname: "<S1>/angular velocity to angle"};
	this.rtwnameHashMap["<S1>/g_y and g_z to angle in radians"] = {sid: "LabB_CheckCommunications:335"};
	this.sidHashMap["LabB_CheckCommunications:335"] = {rtwname: "<S1>/g_y and g_z to angle in radians"};
	this.rtwnameHashMap["<S1>/gyro velocity bias"] = {sid: "LabB_CheckCommunications:394"};
	this.sidHashMap["LabB_CheckCommunications:394"] = {rtwname: "<S1>/gyro velocity bias"};
	this.rtwnameHashMap["<S1>/raw x velocity to deg. // sec."] = {sid: "LabB_CheckCommunications:339"};
	this.sidHashMap["LabB_CheckCommunications:339"] = {rtwname: "<S1>/raw x velocity to deg. // sec."};
	this.rtwnameHashMap["<S1>/raw y acceleration to g_y"] = {sid: "LabB_CheckCommunications:341"};
	this.sidHashMap["LabB_CheckCommunications:341"] = {rtwname: "<S1>/raw y acceleration to g_y"};
	this.rtwnameHashMap["<S1>/raw z acceleration to g_z"] = {sid: "LabB_CheckCommunications:343"};
	this.sidHashMap["LabB_CheckCommunications:343"] = {rtwname: "<S1>/raw z acceleration to g_z"};
	this.rtwnameHashMap["<S1>/angle from gyroscope in radians"] = {sid: "LabB_CheckCommunications:345"};
	this.sidHashMap["LabB_CheckCommunications:345"] = {rtwname: "<S1>/angle from gyroscope in radians"};
	this.rtwnameHashMap["<S1>/angle from accelerometer in radians"] = {sid: "LabB_CheckCommunications:346"};
	this.sidHashMap["LabB_CheckCommunications:346"] = {rtwname: "<S1>/angle from accelerometer in radians"};
	this.rtwnameHashMap["<S1>/encoder"] = {sid: "LabB_CheckCommunications:392"};
	this.sidHashMap["LabB_CheckCommunications:392"] = {rtwname: "<S1>/encoder"};
	this.rtwnameHashMap["<S2>/Radians in"] = {sid: "LabB_CheckCommunications:398:197"};
	this.sidHashMap["LabB_CheckCommunications:398:197"] = {rtwname: "<S2>/Radians in"};
	this.rtwnameHashMap["<S2>/Gain"] = {sid: "LabB_CheckCommunications:398:198"};
	this.sidHashMap["LabB_CheckCommunications:398:198"] = {rtwname: "<S2>/Gain"};
	this.rtwnameHashMap["<S2>/Degrees out"] = {sid: "LabB_CheckCommunications:398:199"};
	this.sidHashMap["LabB_CheckCommunications:398:199"] = {rtwname: "<S2>/Degrees out"};
	this.rtwnameHashMap["<S3>/Radians in"] = {sid: "LabB_CheckCommunications:399:197"};
	this.sidHashMap["LabB_CheckCommunications:399:197"] = {rtwname: "<S3>/Radians in"};
	this.rtwnameHashMap["<S3>/Gain"] = {sid: "LabB_CheckCommunications:399:198"};
	this.sidHashMap["LabB_CheckCommunications:399:198"] = {rtwname: "<S3>/Gain"};
	this.rtwnameHashMap["<S3>/Degrees out"] = {sid: "LabB_CheckCommunications:399:199"};
	this.sidHashMap["LabB_CheckCommunications:399:199"] = {rtwname: "<S3>/Degrees out"};
	this.rtwnameHashMap["<S4>/Degrees in"] = {sid: "LabB_CheckCommunications:391:179"};
	this.sidHashMap["LabB_CheckCommunications:391:179"] = {rtwname: "<S4>/Degrees in"};
	this.rtwnameHashMap["<S4>/Gain1"] = {sid: "LabB_CheckCommunications:391:180"};
	this.sidHashMap["LabB_CheckCommunications:391:180"] = {rtwname: "<S4>/Gain1"};
	this.rtwnameHashMap["<S4>/Radians out"] = {sid: "LabB_CheckCommunications:391:181"};
	this.sidHashMap["LabB_CheckCommunications:391:181"] = {rtwname: "<S4>/Radians out"};
	this.rtwnameHashMap["<S5>/Volts"] = {sid: "LabB_CheckCommunications:408:183"};
	this.sidHashMap["LabB_CheckCommunications:408:183"] = {rtwname: "<S5>/Volts"};
	this.rtwnameHashMap["<S5>/Compare To Zero"] = {sid: "LabB_CheckCommunications:408:185"};
	this.sidHashMap["LabB_CheckCommunications:408:185"] = {rtwname: "<S5>/Compare To Zero"};
	this.rtwnameHashMap["<S5>/Digital Output1"] = {sid: "LabB_CheckCommunications:408:187"};
	this.sidHashMap["LabB_CheckCommunications:408:187"] = {rtwname: "<S5>/Digital Output1"};
	this.rtwnameHashMap["<S5>/PWM"] = {sid: "LabB_CheckCommunications:408:188"};
	this.sidHashMap["LabB_CheckCommunications:408:188"] = {rtwname: "<S5>/PWM"};
	this.rtwnameHashMap["<S5>/Saturation -Vsupply to Vsupply"] = {sid: "LabB_CheckCommunications:408:189"};
	this.sidHashMap["LabB_CheckCommunications:408:189"] = {rtwname: "<S5>/Saturation -Vsupply to Vsupply"};
	this.rtwnameHashMap["<S5>/conversion to dutycycle (convert to uint8, overflow will provide reverse polairty magnitued)"] = {sid: "LabB_CheckCommunications:408:190"};
	this.sidHashMap["LabB_CheckCommunications:408:190"] = {rtwname: "<S5>/conversion to dutycycle (convert to uint8, overflow will provide reverse polairty magnitued)"};
	this.rtwnameHashMap["<S6>/Volts"] = {sid: "LabB_CheckCommunications:409:174"};
	this.sidHashMap["LabB_CheckCommunications:409:174"] = {rtwname: "<S6>/Volts"};
	this.rtwnameHashMap["<S6>/Compare To Zero"] = {sid: "LabB_CheckCommunications:409:176"};
	this.sidHashMap["LabB_CheckCommunications:409:176"] = {rtwname: "<S6>/Compare To Zero"};
	this.rtwnameHashMap["<S6>/Digital Output1"] = {sid: "LabB_CheckCommunications:409:178"};
	this.sidHashMap["LabB_CheckCommunications:409:178"] = {rtwname: "<S6>/Digital Output1"};
	this.rtwnameHashMap["<S6>/PWM"] = {sid: "LabB_CheckCommunications:409:179"};
	this.sidHashMap["LabB_CheckCommunications:409:179"] = {rtwname: "<S6>/PWM"};
	this.rtwnameHashMap["<S6>/Saturation -Vsupply to Vsupply"] = {sid: "LabB_CheckCommunications:409:180"};
	this.sidHashMap["LabB_CheckCommunications:409:180"] = {rtwname: "<S6>/Saturation -Vsupply to Vsupply"};
	this.rtwnameHashMap["<S6>/conversion to dutycycle (convert to uint8, overflow will provide reverse polairty magnitued)"] = {sid: "LabB_CheckCommunications:409:181"};
	this.sidHashMap["LabB_CheckCommunications:409:181"] = {rtwname: "<S6>/conversion to dutycycle (convert to uint8, overflow will provide reverse polairty magnitued)"};
	this.rtwnameHashMap["<S7>/u"] = {sid: "LabB_CheckCommunications:408:185:1"};
	this.sidHashMap["LabB_CheckCommunications:408:185:1"] = {rtwname: "<S7>/u"};
	this.rtwnameHashMap["<S7>/Compare"] = {sid: "LabB_CheckCommunications:408:185:2"};
	this.sidHashMap["LabB_CheckCommunications:408:185:2"] = {rtwname: "<S7>/Compare"};
	this.rtwnameHashMap["<S7>/Constant"] = {sid: "LabB_CheckCommunications:408:185:3"};
	this.sidHashMap["LabB_CheckCommunications:408:185:3"] = {rtwname: "<S7>/Constant"};
	this.rtwnameHashMap["<S7>/y"] = {sid: "LabB_CheckCommunications:408:185:5"};
	this.sidHashMap["LabB_CheckCommunications:408:185:5"] = {rtwname: "<S7>/y"};
	this.rtwnameHashMap["<S8>/u"] = {sid: "LabB_CheckCommunications:409:176:1"};
	this.sidHashMap["LabB_CheckCommunications:409:176:1"] = {rtwname: "<S8>/u"};
	this.rtwnameHashMap["<S8>/Compare"] = {sid: "LabB_CheckCommunications:409:176:2"};
	this.sidHashMap["LabB_CheckCommunications:409:176:2"] = {rtwname: "<S8>/Compare"};
	this.rtwnameHashMap["<S8>/Constant"] = {sid: "LabB_CheckCommunications:409:176:3"};
	this.sidHashMap["LabB_CheckCommunications:409:176:3"] = {rtwname: "<S8>/Constant"};
	this.rtwnameHashMap["<S8>/y"] = {sid: "LabB_CheckCommunications:409:176:5"};
	this.sidHashMap["LabB_CheckCommunications:409:176:5"] = {rtwname: "<S8>/y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
